// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'dart:convert';

import 'package:lang_tube/subtitles_player/utils/subtitles_cache_manager/database_manager.dart/data/constants.dart';
import 'package:lang_tube/subtitles_player/utils/subtitles_cache_manager/database_manager.dart/database_manager.dart';

import '../../subtitles_parser/subtitles_parser.dart';

class SubtitlesEntry {
  final String videoId;
  final String subtitles;
  final String language;

  final bool isAutoGenerated;
  final SubtitlesParser subtitlesParser;

  SubtitlesEntry({
    required this.videoId,
    required this.subtitles,
    required this.isAutoGenerated,
    required this.language,
  }) : subtitlesParser = SubtitlesParser(subtitles);

  SubtitlesEntry.fromRow(Map<String, Object?> row)
      : subtitlesParser = SubtitlesParser(row[subtitlesColumn] as String),
        isAutoGenerated = SubtitlesDbManager.intToBool(
            row[isSubtitleAutoGeneratedColumn] as int),
        subtitles = row[subtitlesColumn] as String,
        videoId = row[videoIdColumn] as String,
        language = row[subtitlesLanguageColumn] as String;

  SubtitlesEntry copyWith(
      {String? subtitles,
      bool? isAutoGenerated,
      String? videoId,
      String? language}) {
    return SubtitlesEntry(
      subtitles: subtitles ?? this.subtitles,
      isAutoGenerated: isAutoGenerated ?? this.isAutoGenerated,
      videoId: videoId ?? this.videoId,
      language: language ?? this.language,
    );
  }

  Map<String, dynamic> toMap() {
    return <String, dynamic>{
      'subtitles': subtitles,
      'subtitlesParser': subtitlesParser,
      'isAutoGenerated': isAutoGenerated,
    };
  }

  factory SubtitlesEntry.fromMap(Map<String, dynamic> map) {
    return SubtitlesEntry(
      subtitles: map['subtitles'] as String,
      isAutoGenerated: map['isAutoGenerated'] as bool,
      videoId: map['videoId'] as String,
      language: map['language'] as String,
    );
  }

  String toJson() => json.encode(toMap());

  factory SubtitlesEntry.fromJson(String source) =>
      SubtitlesEntry.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() =>
      'SubtitleEntryy(subtitles: $subtitles, subtitlesParser: $subtitlesParser, isAutoGenerated: $isAutoGenerated)';

  @override
  bool operator ==(covariant SubtitlesEntry other) {
    if (identical(this, other)) return true;

    return other.subtitles == subtitles &&
        other.subtitlesParser == subtitlesParser &&
        other.isAutoGenerated == isAutoGenerated;
  }

  @override
  int get hashCode =>
      subtitles.hashCode ^ subtitlesParser.hashCode ^ isAutoGenerated.hashCode;
}
