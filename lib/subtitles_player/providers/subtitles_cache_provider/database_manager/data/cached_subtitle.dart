// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:lang_tube/subtitles_player/providers/subtitles_cache_provider/data/constants.dart';

import '../utils/int_to_bool.dart';

@immutable
final class CachedSubtitles {
  final String subtitles;
  final bool isAutoGenerated;
  const CachedSubtitles({
    required this.subtitles,
    required this.isAutoGenerated,
  });

  CachedSubtitles copyWith({
    String? subtitles,
    bool? isAutoGenerated,
  }) {
    return CachedSubtitles(
      subtitles: subtitles ?? this.subtitles,
      isAutoGenerated: isAutoGenerated ?? this.isAutoGenerated,
    );
  }

  Map<String, dynamic> toMap() {
    return <String, dynamic>{
      'subtitles': subtitles,
      'isAutoGenerated': isAutoGenerated,
    };
  }

  factory CachedSubtitles.fromMap(Map<String, dynamic> map) {
    return CachedSubtitles(
      subtitles: map[subtitlesColumn] as String,
      isAutoGenerated: intToBool(
        map[isSubtitleAutoGeneratedColumn],
      ),
    );
  }

  String toJson() => json.encode(toMap());

  factory CachedSubtitles.fromJson(String source) =>
      CachedSubtitles.fromMap(json.decode(source) as Map<String, dynamic>);

  @override
  String toString() =>
      'CachedSubtitles(subtitles: $subtitles, isAutoGenerated: $isAutoGenerated)';

  @override
  bool operator ==(covariant CachedSubtitles other) {
    if (identical(this, other)) return true;

    return other.subtitles == subtitles &&
        other.isAutoGenerated == isAutoGenerated;
  }

  @override
  int get hashCode => subtitles.hashCode ^ isAutoGenerated.hashCode;
}
