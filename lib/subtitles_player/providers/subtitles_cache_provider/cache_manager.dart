import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';
import 'package:youtube_subtitles_scraper/youtube_subtitles_scraper.dart'
    as subtitles_scraper;

import 'database_manager/data/cached_subtitle.dart';
import 'database_manager/data/constants.dart';
import 'database_manager/manager.dart';

@immutable
class SubtitlesCacheManager implements subtitles_scraper.CacheManager {
  const SubtitlesCacheManager._(this._dbManager);
  final SubtitlesDbManager _dbManager;

  static Future<SubtitlesCacheManager> open() async {
    final cacheDirectory = await getTemporaryDirectory();
    return SubtitlesCacheManager._(
      await SubtitlesDbManager.open('${cacheDirectory.path}$subtitlesDbName'),
    );
  }

  Future<Iterable<CachedSubtitles>> retrieveSubtitles({
    required String videoId,
    required String language,
  }) async {
    return await _dbManager.retrieveSubtitles(
      videoId: videoId,
      language: language,
    );
  }

  @override
  Future<void> cacheSubtitles({
    required String subtitles,
    required String videoId,
    required String language,
    required bool isSubtitlesAutoGenerated,
  }) async =>
      await _dbManager.addSubtitles(
        subtitles: subtitles,
        videoId: videoId,
        language: language,
        isAutoGenerated: isSubtitlesAutoGenerated,
      );
}
