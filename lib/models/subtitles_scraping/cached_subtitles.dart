// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:lang_tube/crud/subtitles_cache_manager/constants.dart';
import 'package:lang_tube/utils/bool_to_int.dart';
import 'package:youtube_subtitles_scraper/youtube_subtitles_scraper.dart';

import '../../utils/int_to_bool.dart';

@immutable
final class CachedSubtitles extends ScrapedSubtitles {
  const CachedSubtitles({
    required super.subtitles,
    required super.isAutoGenerated,
    required super.videoId,
    required super.language,
  });

  Map<String, dynamic> toMap() {
    return <String, dynamic>{
      subtitlesColumn: subtitles,
      isSubtitleAutoGeneratedColumn: boolToInt(isAutoGenerated),
      videoIdColumn: videoId,
      subtitlesLanguageColumn: language?.name ?? 'unkown'
    };
  }

  factory CachedSubtitles.fromMap(Map<String, dynamic> map) {
    return CachedSubtitles(
      subtitles: map[subtitlesColumn] as String,
      isAutoGenerated: intToBool(map[isSubtitleAutoGeneratedColumn] as int),
      videoId: map[videoIdColumn] as String,
      language: map[subtitlesLanguageColumn] as String,
    );
  }

  String toJson() => json.encode(toMap());

  factory CachedSubtitles.fromJson(String source) =>
      CachedSubtitles.fromMap(json.decode(source) as Map<String, dynamic>);
}
