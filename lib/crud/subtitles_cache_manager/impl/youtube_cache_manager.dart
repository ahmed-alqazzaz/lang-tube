import 'package:youtube_subtitles_scraper/youtube_subtitles_scraper.dart';

import '../../../models/subtitles/cached_source_captions.dart';
import '../../../models/subtitles/cached_subtitles.dart';
import '../../../models/subtitles/captions_type.dart';
import 'cache_manager_impl.dart';
import 'package:youtube_subtitles_scraper/youtube_subtitles_scraper.dart'
    as youtube_subtitles_scraper;

class YouTubeCaptionsCacheManager
    implements youtube_subtitles_scraper.CacheManager {
  const YouTubeCaptionsCacheManager(CaptionsCacheManagerImpl cacheManager)
      : _cacheManager = cacheManager;
  final CaptionsCacheManagerImpl _cacheManager;

  @override
  Future<void> cacheCaptions(ScrapedCaptions subtitles) => _cacheManager
      .cacheCaptions(CachedSubtitles.fromScrapedCaptions(subtitles));

  @override
  Future<void> cacheSourceCaptions(SourceCaptions sourceCaptions) =>
      _cacheManager.cacheSourceCaptions(
          CachedSourceCaptions.fromSourceCaptions(sourceCaptions));

  @override
  Future<void> clearSources({String? videoId, bool? isAutoGenerated}) =>
      _cacheManager.clearSources(
        videoId: videoId,
        type: isAutoGenerated != null
            ? isAutoGenerated
                ? CaptionsType.youTubeAutoGenerated
                : CaptionsType.youTubeUserGenerated
            : null,
      );

  @override
  Future<void> clearSubtitlesCache() => _cacheManager.clearCaptions();

  @override
  Future<Iterable<SourceCaptions>> retrieveSources(
          {String? videoId, String? language}) =>
      _cacheManager.retrieveSources(videoId: videoId, language: language);

  @override
  Future<Iterable<ScrapedCaptions>> retrieveSubtitles(
          {String? videoId, String? language}) =>
      _cacheManager.retrieveSubtitles(videoId: videoId, language: language);
}
