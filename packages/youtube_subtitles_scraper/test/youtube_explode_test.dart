import 'package:collection/collection.dart';
import 'package:dio/dio.dart';
import 'package:languages/languages.dart';
import 'package:youtube_explode_dart/youtube_explode_dart.dart';
import 'package:youtube_subtitles_scraper/src/youtube_explode_manager.dart';
import 'package:youtube_subtitles_scraper/youtube_subtitles_scraper.dart';
import 'package:flutter_test/flutter_test.dart';

Future<void> main() async {
  final yt = YoutubeExplodeManager(cacheManager: MockCacheManager());
  await YoutubeExplode()
      .videos
      .closedCaptions
      .getManifest('XbAe95Bn5z0')
      .then((value) {
    for (var track in value.tracks) {
      print(track.autoTranslate('en').url.toString());
    }
  });
  // final subs = await yt.fetchAllCaptions(youtubeVideoId: 'R8G_AZuQ9XI');
  // print(subs.first.autoTranslate(Language.english).uri.toString());
  // for (var x in subs.map((e) => e.uri.toString())) {
  //   print(x);
  // }
  // print('done');
  return;
}

class MockCacheManager extends CacheManager {
  @override
  Future<void> cacheSourceCaptions(SourceCaptions sourceCaptions) async {
    return;
  }

  @override
  Future<void> clearSources(
      {String? videoId, bool? isAutoGenerated, String? language}) async {
    return;
  }

  @override
  Future<Iterable<SourceCaptions>> retrieveSources(
      {String? videoId, String? language, bool? isAutoGenerated}) async {
    return [];
  }
}

class MockApiClient extends SubtitlesScraperApiClient {
  @override
  Future<T> fetchUrl<T>(Uri url,
          {void Function(int p1, int p2)? onReceiveProgress}) async =>
      (await Dio().getUri<T>(url)).data!;
}
