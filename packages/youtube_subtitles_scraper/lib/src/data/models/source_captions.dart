import 'package:flutter/foundation.dart';
import 'package:languages/languages.dart';

@immutable
class SourceCaptions {
  final Uri uri;
  final String videoId;
  final bool isAutoGenerated;

  const SourceCaptions({
    required this.uri,
    required this.videoId,
    required this.isAutoGenerated,
  });

  DateTime? get expirationDate {
    dynamic expirationInSeconds = uri.queryParameters['expire'];
    expirationInSeconds =
        expirationInSeconds != null ? int.tryParse(expirationInSeconds) : null;
    return expirationInSeconds is int
        ? DateTime.fromMillisecondsSinceEpoch(
            expirationInSeconds * 1000,
          )
        : null;
  }

  bool? get isExpired {
    return true;
    return expirationDate?.isBefore(DateTime.now());
  }

  Language? get language {
    final languageCode =
        uri.queryParameters['tlang'] ?? uri.queryParameters['lang'];
    for (Language language in Language.values) {
      if (language.code == languageCode) {
        return language;
      }
    }
    return null;
  }

  bool get isAutoTranslated => uri.queryParameters.containsKey('tlang');

  SourceCaptions autoTranslate(Language language) {
    Map<String, String> queryParameters = Map.from(uri.queryParameters);
    queryParameters['tlang'] = language.code;
    return copyWith(
      uri: uri.replace(
        queryParameters: queryParameters,
      ),
    );
  }

  SourceCaptions copyWith({
    Uri? uri,
    String? videoId,
    bool? isAutoGenerated,
  }) {
    return SourceCaptions(
      uri: uri ?? this.uri,
      videoId: videoId ?? this.videoId,
      isAutoGenerated: isAutoGenerated ?? this.isAutoGenerated,
    );
  }

  @override
  String toString() =>
      'SourceSubtitles(uri: $uri, videoId: $videoId, isAutoGenerated: $isAutoGenerated)';

  @override
  bool operator ==(covariant SourceCaptions other) {
    if (identical(this, other)) return true;

    return other.uri == uri &&
        other.videoId == videoId &&
        other.isAutoGenerated == isAutoGenerated;
  }

  @override
  int get hashCode =>
      uri.hashCode ^ videoId.hashCode ^ isAutoGenerated.hashCode;
}
