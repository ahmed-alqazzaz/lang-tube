// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'package:flutter/foundation.dart';
import 'package:languages/languages.dart';

@immutable
final class SourceCaptions {
  final Uri uri;
  final String videoId;
  final bool isAutoGenerated;

  const SourceCaptions({
    required this.uri,
    required this.videoId,
    required this.isAutoGenerated,
  });

  Language get language {
    final languageCode =
        uri.queryParameters['tlang'] ?? uri.queryParameters['lang'];
    for (Language language in Language.values) {
      print("$languageCode ${language.code}");
      if (language.code == languageCode) {
        print('success');
        return language;
      }
    }
    throw "Unable to determine language";
  }

  bool get isAutoTranslated => uri.queryParameters.containsKey('tlang');

  SourceCaptions autoTranslate(Language language) => copyWith(
        uri: uri.replace(
          queryParameters: {
            ...uri.queryParameters,
            'tlang': language.code,
          },
        ),
      );

  SourceCaptions copyWith({
    Uri? uri,
    String? videoId,
    bool? isAutoGenerated,
  }) {
    return SourceCaptions(
      uri: uri ?? this.uri,
      videoId: videoId ?? this.videoId,
      isAutoGenerated: isAutoGenerated ?? this.isAutoGenerated,
    );
  }

  @override
  String toString() =>
      'SourceSubtitles(uri: $uri, videoId: $videoId, isAutoGenerated: $isAutoGenerated)';

  @override
  bool operator ==(covariant SourceCaptions other) {
    if (identical(this, other)) return true;

    return other.uri == uri &&
        other.videoId == videoId &&
        other.isAutoGenerated == isAutoGenerated;
  }

  @override
  int get hashCode =>
      uri.hashCode ^ videoId.hashCode ^ isAutoGenerated.hashCode;
}
