// The Android Gradle Plugin builds the native code with the Android NDK.

group 'com.example.readability'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // The Android Gradle Plugin knows how to build native code with the NDK.
        classpath 'com.android.tools.build:gradle:7.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    sourceSets {
        main {
            jniLibs.srcDirs = ['app/src/main/jniLibs']
        }
    }
    // Bumping the plugin compileSdkVersion requires all clients of this plugin
    // to bump the version in their app.
    compileSdkVersion 31

    // Bumping the plugin ndkVersion requires all clients of this plugin to bump
    // the version in their app and to download a newer version of the NDK.
    ndkVersion "25.2.9519653"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 16
    }
}


// [
//     ['Debug', ''],
//     ['Profile', ''],
//     ['Release', '']
// ].each {
//     def taskPostfix = it[0]
//     def profileMode = it[1]
//     tasks.whenTaskAdded { task ->
//         if (task.name == "javaPreCompile$taskPostfix") {
//             task.dependsOn "cargoBuild$taskPostfix"
//         }
//     }
//     tasks.register("cargoBuild$taskPostfix", Exec) {
//         // Until https://github.com/bbqsrc/cargo-ndk/pull/13 is merged,
//         // this workaround is necessary.

//         def ndk_command = """cargo ndk \
//             -t arm64-v8a \
//             -o ../android/app/src/main/jniLibs build $profileMode"""

//         workingDir "../rust"
//         environment "RUSTFLAGS", "-C relocation-model=pic -C link-arg=-Wl,-z,notext -C link-arg=-fuse-ld=lld -Z relro-level=full"
//         environment "ANDROID_NDK_HOME", "$ANDROID_NDK"
//         if (org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem.isWindows()) {
//             commandLine 'cmd', '/C', ndk_command
//         } else {
//             commandLine 'sh', '-c', ndk_command
//         }
//     }
// }
