import 'package:flutter/cupertino.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:lang_tube/subtitles_player/utils/subtitles_parser/subtitles_parser.dart';
import 'package:lang_tube/models/miscellaneous/cefr.dart';
import 'package:lang_tube/models/video_recommendations/recommended_video.dart';
import 'package:lang_tube/video_recommendations.dart/managers/videos_recommendations_manager/videos_difficulty_ranker/ranker.dart';
import 'package:lang_tube/subtitles_player/utils/subtitles_parser/subtitles_scraper/subtitles_scraper.dart';
import 'package:lang_tube/youtube_scraper/data/youtube_video_item.dart';

import 'consts.dart';

void main() {
  group('Youtube Recommendations Manager test', () {
    final manager = VideosDifficultyRanker();
    setUp(() async {
      TestWidgetsFlutterBinding.ensureInitialized();
      WidgetsFlutterBinding.ensureInitialized();
      final videoGeneratorParams = [
        (lucySubtitles, 'lucy'),
        (rachelSubtitles, 'rachel'),
        (fireshipSubtitles, 'fireship'),
        (marinaSubtitles, 'marina'),
        (germanSubtitles, 'german'),
      ];
      for (var params in videoGeneratorParams) {
        await manager.addVideo(await videoGenerator(params.$1, params.$2));
      }
      return null;
    });

    test('first test', () async {
      SubtitlesParser(fireshipSubtitles).subtitles.forEach((element) {
        print(element);
      });

      expect(manager.recommendations[1].item.title, 'rachel');
      expect(manager.recommendations[0].item.title, 'german');
      expect(manager.recommendations[2].item.title, 'marina');
      expect(manager.recommendations[3].item.title, 'lucy');
    });
  });
}

Future<YoutubeVideo> videoGenerator(String subtitles, String title) async {
  final dummyYoutubeItem = YoutubeVideoItem(
    badges: [],
    channelIconUrl: Uri.parse(""),
    onClick: () async {},
    thumbnailUrl: Uri.parse(""),
    title: title,
    videoId: '',
  );

  return YoutubeVideo(
    cefrLevel: CEFR.a1,
    item: dummyYoutubeItem,
    subtitles: SubtitlesBundle(
      mainSubtitles: SubtitlesEntry(
        isAutoGenerated: true,
        language: 'en',
        videoId: '',
        subtitles: subtitles,
      ),
      translatedSubtitles: SubtitlesEntry.empty(),
    ),
  );
}
